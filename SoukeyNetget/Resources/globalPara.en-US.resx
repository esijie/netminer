<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DatabaseType1" xml:space="preserve">
    <value>MS Access</value>
  </data>
  <data name="DatabaseType2" xml:space="preserve">
    <value>MS Sqlserver</value>
  </data>
  <data name="DatabaseType3" xml:space="preserve">
    <value>MySql</value>
  </data>
  <data name="DownloadFileDealType1" xml:space="preserve">
    <value>重名则进行覆盖</value>
  </data>
  <data name="DownloadFileDealType2" xml:space="preserve">
    <value>重名则按照序号进行排序保存</value>
  </data>
  <data name="DownloadFileDealType3" xml:space="preserve">
    <value>重名则按照网站路径进行保存</value>
  </data>
  <data name="ExportLimit1" xml:space="preserve">
    <value>Absoluteness</value>
  </data>
  <data name="ExportLimit10" xml:space="preserve">
    <value>Del rows by condition</value>
  </data>
  <data name="ExportLimit11" xml:space="preserve">
    <value>Include by condition</value>
  </data>
  <data name="ExportLimit12" xml:space="preserve">
    <value>Set empty by condition</value>
  </data>
  <data name="ExportLimit13" xml:space="preserve">
    <value>Will be converted to Unicode character code</value>
  </data>
  <data name="ExportLimit14" xml:space="preserve">
    <value>HTML in need of decoding</value>
  </data>
  <data name="ExportLimit15" xml:space="preserve">
    <value>Remove page code, but keep the paragraph line breaks</value>
  </data>
  <data name="ExportLimit16" xml:space="preserve">
    <value>Remove page code, but speaking paragraphs replace newline \ r \ n</value>
  </data>
  <data name="ExportLimit17" xml:space="preserve">
    <value>自动编号，起始值</value>
  </data>
  <data name="ExportLimit18" xml:space="preserve">
    <value>将指定符号替换成分行符号，并进行拆分行处理</value>
  </data>
  <data name="ExportLimit19" xml:space="preserve">
    <value>使用正则从采集数据中二次提取数据</value>
  </data>
  <data name="ExportLimit2" xml:space="preserve">
    <value>Delete Html-Coding</value>
  </data>
  <data name="ExportLimit20" xml:space="preserve">
    <value>格式化字符串</value>
  </data>
  <data name="ExportLimit21" xml:space="preserve">
    <value>自动输出下载文件地址</value>
  </data>
  <data name="ExportLimit22" xml:space="preserve">
    <value>从采集网址中获取数据</value>
  </data>
  <data name="ExportLimit23" xml:space="preserve">
    <value>从采集数据中获取</value>
  </data>
  <data name="ExportLimit24" xml:space="preserve">
    <value>采集数据组合</value>
  </data>
  <data name="ExportLimit25" xml:space="preserve">
    <value>字符串解码</value>
  </data>
  <data name="ExportLimit26" xml:space="preserve">
    <value>输入一个固定值</value>
  </data>
  <data name="ExportLimit3" xml:space="preserve">
    <value>Add prefix</value>
  </data>
  <data name="ExportLimit4" xml:space="preserve">
    <value>Add suffix</value>
  </data>
  <data name="ExportLimit5" xml:space="preserve">
    <value>Trim from left</value>
  </data>
  <data name="ExportLimit6" xml:space="preserve">
    <value>Trim from right</value>
  </data>
  <data name="ExportLimit7" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="ExportLimit8" xml:space="preserve">
    <value>Trim blank</value>
  </data>
  <data name="ExportLimit9" xml:space="preserve">
    <value>Replace use Regex</value>
  </data>
  <data name="GDataType1" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="GDataType2" xml:space="preserve">
    <value>Flash</value>
  </data>
  <data name="GDataType3" xml:space="preserve">
    <value>Picture</value>
  </data>
  <data name="GDataType4" xml:space="preserve">
    <value>Auto Gather Text</value>
  </data>
  <data name="GDataType5" xml:space="preserve">
    <value>智能提取页面标题</value>
  </data>
  <data name="GDataType6" xml:space="preserve">
    <value>智能提取文章正文</value>
  </data>
  <data name="GDataType7" xml:space="preserve">
    <value>智能提取发布时间</value>
  </data>
  <data name="IncrByCondition1" xml:space="preserve">
    <value>From the top of incremental</value>
  </data>
  <data name="IncrByCondition2" xml:space="preserve">
    <value>From the end of incremental</value>
  </data>
  <data name="Info113" xml:space="preserve">
    <value>Your changes have been successful, but needs the next time the system starts to take effect!</value>
  </data>
  <data name="LimitSign1" xml:space="preserve">
    <value>NO Limit</value>
  </data>
  <data name="LimitSign10" xml:space="preserve">
    <value>Automatic Content of the article</value>
  </data>
  <data name="LimitSign11" xml:space="preserve">
    <value>Automatic Published of the article</value>
  </data>
  <data name="LimitSign12" xml:space="preserve">
    <value>Automatic Source of the article</value>
  </data>
  <data name="LimitSign2" xml:space="preserve">
    <value>Matching non-symbol character page</value>
  </data>
  <data name="LimitSign3" xml:space="preserve">
    <value>Only matching Chinese</value>
  </data>
  <data name="LimitSign4" xml:space="preserve">
    <value>Only matching Double-Character</value>
  </data>
  <data name="LimitSign5" xml:space="preserve">
    <value>Only matching number</value>
  </data>
  <data name="LimitSign6" xml:space="preserve">
    <value>Only matching character</value>
  </data>
  <data name="LimitSign7" xml:space="preserve">
    <value>Custom matching characters</value>
  </data>
  <data name="LimitSign8" xml:space="preserve">
    <value>Use Regex</value>
  </data>
  <data name="LimitSign9" xml:space="preserve">
    <value>Automatic Title of the article</value>
  </data>
  <data name="MonitorInvalidType1" xml:space="preserve">
    <value>永不失效</value>
  </data>
  <data name="MonitorInvalidType2" xml:space="preserve">
    <value>按照日期失效</value>
  </data>
  <data name="MonitorInvalidType3" xml:space="preserve">
    <value>检测到符合的网址失效</value>
  </data>
  <data name="PlanDisabledType1" xml:space="preserve">
    <value>Disabled by run-time</value>
  </data>
  <data name="PlanDisabledType2" xml:space="preserve">
    <value>Disabled by time</value>
  </data>
  <data name="PlanState1" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="PlanState2" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="PlanState3" xml:space="preserve">
    <value>Overtime</value>
  </data>
  <data name="PluginType1" xml:space="preserve">
    <value>获取Cookie类</value>
  </data>
  <data name="PluginType2" xml:space="preserve">
    <value>数据处理类</value>
  </data>
  <data name="PluginType3" xml:space="preserve">
    <value>数据发布类</value>
  </data>
  <data name="PublishType1" xml:space="preserve">
    <value>NO Publish</value>
  </data>
  <data name="PublishType2" xml:space="preserve">
    <value>Publish Access</value>
  </data>
  <data name="PublishType3" xml:space="preserve">
    <value>Publish MSSqlServer</value>
  </data>
  <data name="PublishType4" xml:space="preserve">
    <value>Publish Excel</value>
  </data>
  <data name="PublishType5" xml:space="preserve">
    <value>Publish Text-File</value>
  </data>
  <data name="PublishType6" xml:space="preserve">
    <value>Publish MySql</value>
  </data>
  <data name="PublishType7" xml:space="preserve">
    <value>Publish Website</value>
  </data>
  <data name="RunTaskType1" xml:space="preserve">
    <value>SoukeyNetget Task</value>
  </data>
  <data name="RunTaskType2" xml:space="preserve">
    <value>StoreProcess</value>
  </data>
  <data name="RunTaskType3" xml:space="preserve">
    <value>Program</value>
  </data>
  <data name="TaskRunType1" xml:space="preserve">
    <value>Only Collection</value>
  </data>
  <data name="TaskRunType2" xml:space="preserve">
    <value>Collection and Publish</value>
  </data>
  <data name="TaskRunType3" xml:space="preserve">
    <value>Store To support large data</value>
  </data>
  <data name="TaskType1" xml:space="preserve">
    <value>Collection by url</value>
  </data>
  <data name="TaskType2" xml:space="preserve">
    <value>Collection by website</value>
  </data>
  <data name="TaskType3" xml:space="preserve">
    <value>Collection by RSS</value>
  </data>
  <data name="TaskType4" xml:space="preserve">
    <value>Ajax </value>
  </data>
  <data name="TaskType5" xml:space="preserve">
    <value>Incremental collection</value>
  </data>
  <data name="TaskType6" xml:space="preserve">
    <value>External parameters</value>
  </data>
  <data name="WatermarkPos1" xml:space="preserve">
    <value>靠左靠上</value>
  </data>
  <data name="WatermarkPos2" xml:space="preserve">
    <value>靠左上下居中</value>
  </data>
  <data name="WatermarkPos3" xml:space="preserve">
    <value>靠左靠下</value>
  </data>
  <data name="WatermarkPos4" xml:space="preserve">
    <value>居中靠上</value>
  </data>
  <data name="WatermarkPos5" xml:space="preserve">
    <value>左右居中上下居中</value>
  </data>
  <data name="WatermarkPos6" xml:space="preserve">
    <value>居中靠下</value>
  </data>
  <data name="WatermarkPos7" xml:space="preserve">
    <value>靠右靠上</value>
  </data>
  <data name="WatermarkPos8" xml:space="preserve">
    <value>靠右上下居中</value>
  </data>
  <data name="WatermarkPos9" xml:space="preserve">
    <value>靠右靠下</value>
  </data>
  <data name="WebCode1" xml:space="preserve">
    <value>No Encoding</value>
  </data>
  <data name="WebCode2" xml:space="preserve">
    <value>Auto</value>
  </data>
  <data name="WebCode3" xml:space="preserve">
    <value>gb2312</value>
  </data>
  <data name="WebCode4" xml:space="preserve">
    <value>UTF-8</value>
  </data>
  <data name="WebCode5" xml:space="preserve">
    <value>gbk</value>
  </data>
  <data name="WebCode6" xml:space="preserve">
    <value>big5</value>
  </data>
</root>